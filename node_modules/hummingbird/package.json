{
  "name": "hummingbird",
  "description": "Impossibly quick, precise, and beautiful to behold day and night",
  "homepage": "http://glg.github.io/hummingbird.js",
  "version": "0.7.1",
  "index_version": "4.0",
  "author": {
    "name": "Daniel Griffis, Steve Quince, Amit Segal"
  },
  "main": "hummingbird.js",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/glg/hummingbird.js.git"
  },
  "devDependencies": {
    "grunt": "~0.4.0",
    "grunt-contrib-coffee": "~0.10.1",
    "grunt-contrib-connect": "~0.1.2",
    "grunt-contrib-watch": "~0.3.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-concat": "~0.1.3",
    "load-grunt-tasks": "~0.3.0",
    "grunt-shell": "~0.6.4",
    "browserify": "~3.30.1",
    "grunt-browserify": "~1.3.1",
    "grunt-include-replace": "~1.2.0",
    "doc-n-toc": "~0.0.4",
    "grunt-contrib-qunit": "~0.4.0",
    "coffee-script": "~1.3.3",
    "prompt": "~0.2.12"
  },
  "dependencies": {
    "diacritics": "~1.1.0"
  },
  "readme": "# Hummingbird.js\n\n_Impossibly quick and remarkably precise autosuggest_\n\nYou can index any JavaScript object you like with _id_ and _name_, and\nhummingbird.js will merrily make it searchable. No schema needed, it\njust matches against _name_ and returns the document.\n\n* _id_ serves as the key, this needs to be unique in an index.\n* _name_ is the indexed text, just build up a property.\nAny other properties are just carried along, but are not indexed.\n\n```javascript\n    var idx = new hummingbird.Index();\n    idx.add({id: 1, name: 'Hi Mom', female: true});\n    idx.add({id: 2, name: 'Sup Dad', male: true});\n    idx.search('Dad', function(results){\n        results.forEach(function(doc){\n            console.log(doc);\n        });\n    });\n```\n### Browser or Server\nHummingbird is designed to run 100% in the browser for reasonably sized\nlists of names (i.e., those that will fit into the users available RAM).\nIf you need to run a server-side solution (e.g., for large indexes or\n  other reasons), please take a look at Nectar\n  http://github.com/glg/nectar\n\n### What goes into a hummingbird index\nHummingbird is specifically focused on typeahead results, but often\nyou'll need to display more than just the name of something for the user\nto make a selection decision.  To that end, the ideal hummingbird index\nshould contain:\n\n* the name of the thing on which to select\n* a unique id on which one might take action\n* meta data that enables the user to disambiguate between similarly\nnamed items\n* meta data that enables further action on selected items.\n\ne.g.,\n\n* *name:* Steve Quince\n* *id:* 1235\n* *company:* Gerson Lehrman Group\n* *location:* Boston, MA\n* *telephone:* 617-555-1212\n* *email:* myemail@address.com\n\n[Read more...](http://glg.github.io/hummingbird.js#toc2)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/glg/hummingbird.js/issues"
  },
  "_id": "hummingbird@0.7.1",
  "dist": {
    "shasum": "ced62962fb0a866f670d185dd0d2dcb1e51b5dde"
  },
  "_from": "hummingbird@0.x",
  "_resolved": "https://registry.npmjs.org/hummingbird/-/hummingbird-0.7.1.tgz"
}
